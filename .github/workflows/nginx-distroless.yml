name: nginx-distroless

on:
  push:
    branches: 
      - main
    paths:
      - nginx-distroless/*
      - .github/workflows/nginx-distroless.yml
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1"

env:
  BUILD_VERSION: "1.21.3"
  BUILD_STABLE_VERSION: "1.20.1"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }} 

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      packages: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Source checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@6a58db7e0d21ca03e6c44877909e80e45217eed2 # v1

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@2c0bd771b40637d97bf205cbccdd294a32112176 # v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: DockerHub login
#        if: ${{ github.event_name != 'pull_request' }}
#        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v1.12.0
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Build and push (latest)
        uses: docker/build-push-action@44ea916f6c540f9302d50c2b1e5a8dc071f15cdf
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          platforms: linux/amd64,linux/arm64,linux/s390x
          #platforms: linux/amd64
          build-args: BUILD_VERSION
          sbom: true
          provenance: true
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            ghcr.io/${{ env.REPOSITORY }}:latest

      - name: Build and push (stable)
        uses: docker/build-push-action@44ea916f6c540f9302d50c2b1e5a8dc071f15cdf
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          file: ${{ github.workflow }}/Dockerfile.stable
          platforms: linux/amd64,linux/arm64,linux/s390x
          #platforms: linux/amd64
          build-args: |
            BUILD_STABLE_VERSION
          sbom: true
          provenance: true
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_STABLE_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}
          tags: |
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_STABLE_VERSION }}
            ghcr.io/${{ env.REPOSITORY }}:stable

