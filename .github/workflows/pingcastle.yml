name: pingcastle

on:
  push:
    branches: 
      - main
    paths:
      - pingcastle/*
      - .github/workflows/pingcastle.yml
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1"

env:
  BUILD_VERSION: "2.10.1.0"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }}-sandbox

permissions: read-all

jobs:
  deploy:
    runs-on: windows-2022
    permissions:
      packages: write
      id-token: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@248ae51c2e8cc9622ecf50685c8bf7150c6e8813 # v1
        with:
          egress-policy: audit
          
      - name: Source checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.4.0 

      - uses: Vampire/setup-wsl@c003d9af9874c5c793ff5f12862025fe6f176cbe # v1
        with:
          distribution: Alpine

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # v3
        with:
          images: ${{ env.REPOSITORY }}
          tags: |
            type=sha,format=long,prefix=sha256:
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: DockerHub login
#        if: ${{ github.event_name != 'pull_request' }}
#        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # v1.12.0
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Build and push
        run: |
          docker build --file=${{ github.workflow }}/Dockerfile -t ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }} -t ghcr.io/${{ env.REPOSITORY }}:latest --build-arg "BUILD_VERSION=${{ env.BUILD_VERSION }}" .
          docker push ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
          docker push ghcr.io/${{ env.REPOSITORY }}:latest
          
      - name: Install cosign
        uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25 # v1.4.1
      
      - name: Install syft
        uses: anchore/sbom-action/download-syft@bb716408e75840bbb01e839347cd213767269d4a # v0.6.0

      - name: Sign the image digest and generate SBOM
        run: |
          cosign sign ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          syft ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }} -o json > ghcr_sbom.json
          cosign attest --predicate ghcr_sbom.json ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign sign registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}
          syft registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }} -o json > gitlab_sbom.json
          cosign attest --predicate gitlab_sbom.json registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1
         
      - name: Verify the image digest and SBOM
        run: |
          cosign verify ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign verify-attestation ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign verify registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}
          cosign verify-attestation registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}          
        env:
          COSIGN_EXPERIMENTAL: 1
