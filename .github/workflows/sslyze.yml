name: sslyze

on:
  push:
    branches: 
      - main
    paths:
      - sslyze/*
      - .github/workflows/sslyze.yml
  workflow_dispatch:

env:
  BUILD_VERSION: "5.1.3"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }}-sandbox 

permissions: read-all

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        #distro: [ubuntu, alpine]
        distro: [ubuntu]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      id-token: write
      
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v1
        with:
          egress-policy: audit
          disable-telemetry: false
          allowed-endpoints: 
            95s5acprodeus1file6.blob.core.windows.net:443
            api.github.com:443
            archive.ubuntu.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            codeload.github.com:443
            dl-cdn.alpinelinux.org:443
            files.pythonhosted.org:443
            ghcr.io:443
            github.com:443
            ports.ubuntu.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            pypi.org:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            security.ubuntu.com:443
            storage.googleapis.com:443
            
      - name: Source checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d45.1.36a6f8ba8e71fc6e2cb6e6c8c # v1

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}
            
      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: DockerHub login
#        if: ${{ github.event_name != 'pull_request' }}
#        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v1.12.0
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: GitLab login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v1.12.0
        with:
          registry: registry.gitlab.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITLAB_REGISTRY_TOKEN }}

      - name: Build and push (Ubuntu)
        id: push-step
        if: ${{ matrix.distro == 'ubuntu' }}
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          file: ${{ github.workflow }}/Dockerfile
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/arm/v7
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          build-args: BUILD_VERSION
          cache-from: type=gha, scope=${{ github.workflow }}-${{ matrix.distro }}
          cache-to: type=gha, scope=${{ github.workflow }}-${{ matrix.distro }}, mode=max
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-${{ matrix.distro }}
            ghcr.io/${{ env.REPOSITORY }}:latest
            registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}:${{ env.BUILD_VERSION }}
            registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}:${{ env.BUILD_VERSION }}-${{ matrix.distro }}
            registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}:latest            

      - name: Build and push (Alpine)
        if: ${{ matrix.distro == 'alpine' }}
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          file: ${{ github.workflow }}/Dockerfile.${{ matrix.distro }}
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/arm/v7
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          build-args: BUILD_VERSION
          sbom: true
          provenance: true
          cache-from: type=gha, scope=${{ github.workflow }}-${{ matrix.distro }}
          cache-to: type=gha, scope=${{ github.workflow }}-${{ matrix.distro }}, mode=max
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-${{ matrix.distro }}
            registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}:${{ env.BUILD_VERSION }}-${{ matrix.distro }}

      # The following is for testing container signing and generating SBOMs
      # Workaround for buildx bug: https://github.com/docker/build-push-action/issues/461
      #
      # Links
      # https://githubhelp.com/chrisns/cosign-keyless-demo
      # https://blog.chainguard.dev/zero-friction-keyless-signing-with-github-actions/
      # https://github.com/mattmoor/zero-friction-actions/blob/main/.github/workflows/docker-publish.yml
      # https://github.com/docker/roadmap/issues/269
      # https://github.com/anchore/syft
      
      #- name: Install cosign
      #  uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b # v1.4.1
      
      #- name: Install syft
      #  uses: anchore/sbom-action/download-syft@54e36e45f34bc64728f51adb8044404daca492a6 # v0.6.0
      
      #- name: Sign the image digest and generate SBOM
      #  run: |
      #    cosign sign ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
      #    syft ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }} -o json > ghcr_sbom.json
      #    cosign attest --predicate ghcr_sbom.json ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
      #    cosign sign registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}
      #    syft registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }} -o json > gitlab_sbom.json
      #    cosign attest --predicate gitlab_sbom.json registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}
      #  env:
      #    COSIGN_EXPERIMENTAL: 1
         
      #- name: Verify the image digest and SBOM
      #  run: |
      #    cosign verify ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
      #    cosign verify-attestation ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
      #    cosign verify registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}
      #    cosign verify-attestation registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}          
      #  env:
      #    COSIGN_EXPERIMENTAL: 1
          
