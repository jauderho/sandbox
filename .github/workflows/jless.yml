name: jless

on:
  push:
    branches: 
      - main
    paths:
      - jless/*
      - .github/workflows/jless.yml
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1"

env:
  BUILD_VERSION: "git"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }}-sandbox 

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      id-token: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # v1
        with:
          egress-policy: audit

      - name: Source checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # v1

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # v3
        with:
          images: ${{ env.REPOSITORY }}
          tags: |
            type=sha,format=long,prefix=sha256:
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: DockerHub login
#        if: ${{ github.event_name != 'pull_request' }}
#        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # v1.12.0
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Build and push
        id: push-step
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94 # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          #platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/ppc64le
          #platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6,linux/s390x
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          #platforms: ${{ matrix.arch }}
          build-args: |
            BUILD_VERSION
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}, mode=max
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            ghcr.io/${{ env.REPOSITORY }}:latest

      # The following is for testing container signing and generating SBOMs
      # Workaround for buildx bug: https://github.com/docker/build-push-action/issues/461
      #
      # Links
      # https://githubhelp.com/chrisns/cosign-keyless-demo
      # https://blog.chainguard.dev/zero-friction-keyless-signing-with-github-actions/
      # https://github.com/mattmoor/zero-friction-actions/blob/main/.github/workflows/docker-publish.yml
      # https://github.com/docker/roadmap/issues/269
      # https://github.com/anchore/syft
      
      - name: Install cosign
        uses: sigstore/cosign-installer@ced07f21fb1da67979f539bbc6304c16c0677e76 # v1.4.1
      
      - name: Install syft
        uses: anchore/sbom-action/download-syft@b5042e9d19d8b32849779bfe17673ff84aec702d # v0.6.0
      
      - name: Sign the image digest and generate SBOM
        run: |
          cosign sign ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          syft ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }} -o json > ghcr_sbom.json
          cosign attest --predicate ghcr_sbom.json ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign sign registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}
          syft registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }} -o json > gitlab_sbom.json
          cosign attest --predicate gitlab_sbom.json registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1
         
      - name: Verify the image digest and SBOM
        run: |
          cosign verify ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign verify-attestation ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign verify registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}
          cosign verify-attestation registry.gitlab.com/${{ github.repository }}/${{ github.workflow }}@${{ steps.push-step.outputs.digest }}          
        env:
          COSIGN_EXPERIMENTAL: 1
          
