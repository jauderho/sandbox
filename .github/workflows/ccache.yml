# test ccache
name: ccache

on:
  #push:
  #  branches: 
  #    - main
  #  paths:
  #    - ccache/*
  #    - .github/workflows/ccache.yml
  workflow_dispatch:
  #schedule:
  #  - cron: "0 8 * * 1"

env:
  BUILD_VERSION: "1.21.4"
  OPENSSL_VERSION: "3.0.0"
  PCRE_VERSION: "8.45"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }} 

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      packages: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6b3083af2869dc3314a0257a42f4af696cc79ba3
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Source checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v1
      
      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@c4ee3adeed93b1fa6a762f209fb01608c1a22f1e # v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: ccache
        uses: hendrikmuhs/ccache-action@ca3acd2731eef11f1572ccb126356c2f9298d35e # v1
        with:
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          max-size: 500M

      - name: Check path
        run: |
          ls -la
          pwd

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: DockerHub login
#        if: ${{ github.event_name != 'pull_request' }}
#        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v1.12.0
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Build and push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          push: ${{ github.event_name != 'pull_request' }}
          #context: ${{ github.workflow }}
          context: nginx
          file: nginx/Dockerfile.works
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/arm/v7
          #platforms: linux/amd64,linux/arm64,linux/ppc64le
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          build-args: BUILD_VERSION
          sbom: true
          provenance: true
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-sandbox

